// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ScrapeWise_Intelligent_Web_Scraping_Dashboard_ASP.NET_Core_MVC_.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250521211830_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ConfigProfile", b =>
                {
                    b.Property<int>("ConfigProfileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ConfigProfileId"));

                    b.Property<int>("DelayBetweenRequests")
                        .HasColumnType("int");

                    b.Property<string>("UserAgent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ConfigProfileId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("ConfigProfiles");
                });

            modelBuilder.Entity("ScrapingJob", b =>
                {
                    b.Property<int>("ScrapingJobId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ScrapingJobId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CssSelector")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ScrapingJobId");

                    b.HasIndex("UserId");

                    b.ToTable("ScrapingJobs");
                });

            modelBuilder.Entity("ScrapingResult", b =>
                {
                    b.Property<int>("ScrapingResultId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ScrapingResultId"));

                    b.Property<string>("ExtractedText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ScrapedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("ScrapingJobId")
                        .HasColumnType("int");

                    b.HasKey("ScrapingResultId");

                    b.HasIndex("ScrapingJobId");

                    b.ToTable("ScrapingResults");
                });

            modelBuilder.Entity("User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ConfigProfile", b =>
                {
                    b.HasOne("User", "User")
                        .WithOne("ConfigProfile")
                        .HasForeignKey("ConfigProfile", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ScrapingJob", b =>
                {
                    b.HasOne("User", "User")
                        .WithMany("ScrapingJobs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ScrapingResult", b =>
                {
                    b.HasOne("ScrapingJob", "ScrapingJob")
                        .WithMany("ScrapingResults")
                        .HasForeignKey("ScrapingJobId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ScrapingJob");
                });

            modelBuilder.Entity("ScrapingJob", b =>
                {
                    b.Navigation("ScrapingResults");
                });

            modelBuilder.Entity("User", b =>
                {
                    b.Navigation("ConfigProfile")
                        .IsRequired();

                    b.Navigation("ScrapingJobs");
                });
#pragma warning restore 612, 618
        }
    }
}
